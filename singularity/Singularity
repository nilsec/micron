Bootstrap: docker
From: ubuntu:18.04

%setup
mkdir -p ${SINGULARITY_ROOTFS}/src/malis
mkdir -p ${SINGULARITY_ROOTFS}/src/augment
mkdir -p ${SINGULARITY_ROOTFS}/src/dvision
mkdir -p ${SINGULARITY_ROOTFS}/src/mala
mkdir -p ${SINGULARITY_ROOTFS}/src/waterz
mkdir -p ${SINGULARITY_ROOTFS}/src/numcodecs
mkdir -p ${SINGULARITY_ROOTFS}/src/zarr
mkdir -p ${SINGULARITY_ROOTFS}/src/gunpowder
mkdir -p ${SINGULARITY_ROOTFS}/src/daisy
mkdir -p ${SINGULARITY_ROOTFS}/src/funlib/seg
mkdir -p ${SINGULARITY_ROOTFS}/src/funlib/learn
mkdir -p ${SINGULARITY_ROOTFS}/src/lsd
mkdir -p ${SINGULARITY_ROOTFS}/src/funlib/math
mkdir -p ${SINGULARITY_ROOTFS}/src/micron
mkdir -p ${SINGULARITY_ROOTFS}/src/funlib/run

%files
micron /src/micron/micron
requirements.txt /src/micron/requirements.txt
setup.py /src/micron/setup.py

%labels
maintainer ecksteinn@janelia.hhmi.org

%post

# basic ubuntu packages

apt update
apt install -y --no-install-recommends \
build-essential \
ca-certificates \
cmake \
git \
libmlpack-dev \
liblzma-dev \
wget && \
rm -rf /var/lib/apt/lists/*

# install conda

wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
bash miniconda.sh -b -p /miniconda
PATH="/miniconda/bin:$PATH"
conda config --set always_yes yes --set changeps1 no
conda update -q conda
conda info -a
conda install python=3.6

# install tensorflow

conda install -c anaconda tensorflow-gpu=1.14 cudatoolkit=10.0

# install pylp
conda install -c funkey pylp

# install funlib.run
RUN_ROOT=/src/funlib/run
RUN_REPO=https://github.com/funkelab/funlib.run.git
RUN_REV=bf383a76865b998e621c034de4f84e2ac9f69377
cd ${RUN_ROOT}
git clone ${RUN_REPO} . && \
git checkout ${RUN_REV}
make install-full
PYTHONPATH=${RUN_ROOT}:$PYTHONPATH

# dependencies for lsd

MALIS_ROOT=/src/malis
MALIS_REPOSITORY=https://github.com/TuragaLab/malis.git
MALIS_REVISION=beb4ee965acee89ab00a20a70205f51177003c69

pip install cython
cd ${MALIS_ROOT}
git clone ${MALIS_REPOSITORY} . && \
git checkout ${MALIS_REVISION}
python setup.py build_ext --inplace
PYTHONPATH=${MALIS_ROOT}:$PYTHONPATH

AUGMENT_ROOT=/src/augment
AUGMENT_REPOSITORY=https://github.com/funkey/augment.git
AUGMENT_REVISION=4a42b01ccad7607b47a1096e904220729dbcb80a

cd ${AUGMENT_ROOT}
git clone ${AUGMENT_REPOSITORY} . && \
git checkout ${AUGMENT_REVISION}
pip install -r requirements.txt
PYTHONPATH=${AUGMENT_ROOT}:$PYTHONPATH

DVISION_ROOT=/src/dvision
DVISION_REPOSITORY=https://github.com/TuragaLab/dvision.git
DVISION_REVISION=v0.1.1

cd ${DVISION_ROOT}
git clone -b ${DVISION_REVISION} --depth 1 ${DVISION_REPOSITORY} .
pip install -r requirements.txt
PYTHONPATH=${DVISION_ROOT}:$PYTHONPATH

MALA_ROOT=/src/mala
MALA_REPOSITORY=https://github.com/funkey/mala.git
MALA_REVISION=465b02ffce4204a4c1922f2b316a8b447ec4eb9b

cd ${MALA_ROOT}
git clone ${MALA_REPOSITORY} . && \
git checkout ${MALA_REVISION}
python setup.py build_ext --inplace
PYTHONPATH=${MALA_ROOT}:$PYTHONPATH

WATERZ_ROOT=/src/waterz
WATERZ_REPOSITORY=https://github.com/funkey/waterz
WATERZ_REVISION=8ccd0b308fed604d143577f128420da83ff444da

cd ${WATERZ_ROOT}
git clone ${WATERZ_REPOSITORY} . && \
git checkout ${WATERZ_REVISION}
mkdir -p /.cython/inline
python setup.py install

NUMCODECS_ROOT=/src/numcodecs
NUMCODECS_REPOSITORY=https://github.com/funkey/numcodecs
NUMCODECS_REVISION=f950047d7b666723f81006cbdfd82c0e6705c39c

cd ${NUMCODECS_ROOT}
git clone ${NUMCODECS_REPOSITORY} . && \
git checkout ${NUMCODECS_REVISION} && \
git submodule update --init --recursive
pip install -r requirements.txt
python setup.py install

ZARR_ROOT=/src/zarr
ZARR_REPOSITORY=https://github.com/funkey/zarr
ZARR_REVISION=9ddf849a6e3329f5ff361ebf6156712926e2fdfe

cd ${ZARR_ROOT}
git clone ${ZARR_REPOSITORY} . && \
git checkout ${ZARR_REVISION}
pip install -r requirements.txt
python setup.py install

GUNPOWDER_ROOT=/src/gunpowder
GUNPOWDER_REPOSITORY=https://github.com/nilsec/gunpowder.git
GUNPOWDER_REVISION=c38353b10f6c90784c8201fd15c7a53c9bdec158

cd ${GUNPOWDER_ROOT}
git clone ${GUNPOWDER_REPOSITORY} . && \
git checkout ${GUNPOWDER_REVISION}
pip install -r requirements.txt
python setup.py build_ext --inplace
PYTHONPATH=${GUNPOWDER_ROOT}:$PYTHONPATH

DAISY_ROOT=/src/daisy
DAISY_REPOSITORY=https://github.com/funkelab/daisy
DAISY_REVISION=6fe3210f61c2ed7a1c39f4f9c17e21e11db1ee9e

cd ${DAISY_ROOT}
git clone ${DAISY_REPOSITORY} . && \
git checkout ${DAISY_REVISION}
pip install -r requirements.txt
python setup.py build_ext --inplace
PYTHONPATH=${DAISY_ROOT}:$PYTHONPATH

FUNLIB_SEG_ROOT=/src/funlib/seg
FUNLIB_SEG_REPOSITORY=https://github.com/funkelab/funlib.segment
FUNLIB_SEG_REVISION=09246e7aed32210747800906846d03788ca10b81

cd ${FUNLIB_SEG_ROOT}
git clone ${FUNLIB_SEG_REPOSITORY} . && \
git checkout ${FUNLIB_SEG_REVISION}
pip install -r requirements.txt
python setup.py build_ext --inplace
PYTHONPATH=${FUNLIB_SEG_ROOT}:$PYTHONPATH

FUNLIB_LEARN_ROOT=/src/funlib/learn
FUNLIB_LEARN_REPOSITORY=https://github.com/funkelab/funlib.learn.tensorflow.git
FUNLIB_LEARN_REVISION=e9f761ba9335782bec3e714a976c27aaf93c4bba

cd ${FUNLIB_LEARN_ROOT}
git clone ${FUNLIB_LEARN_REPOSITORY} . && \
git checkout ${FUNLIB_LEARN_REVISION}
pip install -r requirements.txt
python setup.py build_ext --inplace
PYTHONPATH=${FUNLIB_LEARN_ROOT}:$PYTHONPATH

FUNLIB_MATH_ROOT=/src/funlib/math
FUNLIB_MATH_REPOSITORY=https://github.com/funkelab/funlib.math.git
FUNLIB_MATH_REVISION=80c841555050ed7b044c938c640f429599cbee70

cd ${FUNLIB_MATH_ROOT}
git clone ${FUNLIB_MATH_REPOSITORY} . && \
git checkout ${FUNLIB_MATH_REVISION}
pip install -r requirements.txt
python setup.py build_ext --inplace
PYTHONPATH=${FUNLIB_MATH_ROOT}:$PYTHONPATH

pip install mahotas
pip install pymongo

LSD_ROOT=/src/lsd
LSD_REPOSITORY=https://github.com/funkelab/lsd.git
LSD_REVISION=8bd60cb8e50f70c706f5fa4dc6dcd5729e407a52

cd ${LSD_ROOT}
git clone ${LSD_REPOSITORY} . && \
git checkout ${LSD_REVISION}
pip install -r requirements.txt
python setup.py build_ext --inplace
PYTHONPATH=${LSD_ROOT}:$PYTHONPATH

# Install micron
cd /src/micron
python setup.py build_ext --inplace
PYTHONPATH=/src/micron:$PYTHONPATH

%environment
export MALIS_ROOT=/src/malis
export PYTHONPATH=${MALIS_ROOT}:$PYTHONPATH
export AUGMENT_ROOT=/src/augment
export PYTHONPATH=${AUGMENT_ROOT}:$PYTHONPATH
export DVISION_ROOT=/src/dvision
export PYTHONPATH=${DVISION_ROOT}:$PYTHONPATH
export MALA_ROOT=/src/mala
export PYTHONPATH=${MALA_ROOT}:$PYTHONPATH
export GUNPOWDER_ROOT=/src/gunpowder
export PYTHONPATH=${GUNPOWDER_ROOT}:$PYTHONPATH
export DAISY_ROOT=/src/daisy
export PYTHONPATH=${DAISY_ROOT}:$PYTHONPATH
export FUNLIB_SEG_ROOT=/src/funlib/seg
export FUNLIB_LEARN_ROOT=/src/funlib/learn
export FUNLIB_MATH_ROOT=/src/funlib/math
export PYTHONPATH=${FUNLIB_LEARN_ROOT}:$PYTHONPATH
export PYTHONPATH=${FUNLIB_SEG_ROOT}:$PYTHONPATH
export PYTHONPATH=${FUNLIB_MATH_ROOT}:$PYTHONPATH
export PYTHONPATH=/src/lsd:$PYTHONPATH
export PATH=/miniconda/bin:${PATH}
export PYTHONPATH=/src/micron:$PYTHONPATH

#Gurobi environment variables - adapt if needed:
export GUROBI_HOME=/misc/local/gurobi-8.0.1
export PATH=${GUROBI_HOME}/bin:${PATH}
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${GUROBI_HOME}/lib
export GRB_LICENSE_FILE=${GUROBI_HOME}/gurobi.lic
#export GUROBI_ROOT_DIR=/opt/gurobi810/linux64

# disable threads for numpy and the like, they get into our way when we
# pre-fetch batches using multiple processes
export OMP_NUM_THREADS=1

%runscript
exec /bin/bash "$@"
